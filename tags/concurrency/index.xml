<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>concurrency on Morgoth</title>
    <link>http://canuxcheng.com/tags/concurrency/</link>
    <description>Recent content in concurrency on Morgoth</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 01 Jan 2018 10:49:21 +0000</lastBuildDate>
    
	<atom:link href="http://canuxcheng.com/tags/concurrency/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go_Concurrency</title>
      <link>http://canuxcheng.com/post/go_concurrency/</link>
      <pubDate>Mon, 01 Jan 2018 10:49:21 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/go_concurrency/</guid>
      <description>并发/concurrency go的并发同步模型来自CSP泛型。CSP是一种消息传递模型，用于在goroutine之间同步和传递数据的类型是c</description>
    </item>
    
    <item>
      <title>GSL_concurrency</title>
      <link>http://canuxcheng.com/post/gsl_concurrency/</link>
      <pubDate>Mon, 01 Jan 2018 10:49:21 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/gsl_concurrency/</guid>
      <description>sync sync用于goroutine同步. import &amp;quot;sync&amp;quot; constants variables functions Locker 一个可以加锁和解锁的接口 type Locker interface { Lock() Unlock() } Pool Pool是一个可以分别存取的临时对象的集合。 Once 只执</description>
    </item>
    
    <item>
      <title>PSL_Concurrency</title>
      <link>http://canuxcheng.com/post/psl_concurrency/</link>
      <pubDate>Mon, 15 Aug 2016 11:04:12 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/psl_concurrency/</guid>
      <description>Concurrent Execution 进程：每个进程都有自己的地址空间，内存，数据栈以及其它记录其运行轨迹的辅助数据，进程间不共享全局变量。 线程：线程（有时被称为轻量级进程）</description>
    </item>
    
  </channel>
</rss>