<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>string on Morgoth</title>
    <link>http://canuxcheng.com/tags/string/</link>
    <description>Recent content in string on Morgoth</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 01 Jan 2018 10:49:21 +0000</lastBuildDate>
    
	<atom:link href="http://canuxcheng.com/tags/string/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GSL_string</title>
      <link>http://canuxcheng.com/post/gsl_string/</link>
      <pubDate>Mon, 01 Jan 2018 10:49:21 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/gsl_string/</guid>
      <description>strings 实现了用于操作字符的函数. functions func EqualFold(s, t string) bool func HasPrefix(s, prefix string) bool func HasSuffix(s, suffix string) bool func Count(s, sep string) int func Contains(s, substr string) bool ... func Index(s, sep string) int ... func LastIndex(s, sep string) int ... func title(s string) string func ToLower(s string) string ... // 返回count</description>
    </item>
    
    <item>
      <title>PSL_String</title>
      <link>http://canuxcheng.com/post/psl_string/</link>
      <pubDate>Fri, 12 Aug 2016 16:49:07 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/psl_string/</guid>
      <description>Text Processing Services string import string classes: functions: data: ascii_letters ascii_lowercase ascii_uppercase digits ... re import re classes: functions: compile(pattern, flags=0) escape(pattern) findall(pattern, string, flags=0) finditer(pattern, string, flags=0) match(pattern, string, flags=0) # if not match, return None, else return object. search(pattern, string, flags=0) purge() split(pattern, string, maxsplit=0, flags=0) # 根据pattern分割string,返回分</description>
    </item>
    
  </channel>
</rss>