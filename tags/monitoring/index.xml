<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>monitoring on Morgoth</title>
    <link>http://canuxcheng.com/tags/monitoring/</link>
    <description>Recent content in monitoring on Morgoth</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 05 Apr 2018 21:47:54 +0000</lastBuildDate>
    
	<atom:link href="http://canuxcheng.com/tags/monitoring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Monitoring</title>
      <link>http://canuxcheng.com/post/storage_monitoring/</link>
      <pubDate>Thu, 05 Apr 2018 21:47:54 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/storage_monitoring/</guid>
      <description>Monitoring diskio IOPS: Input/Output Per Second. 每秒输入输出量，也叫TPS. SELECT non_negative_derivative(mean(reads),1s) as &amp;quot;read&amp;quot; FROM &amp;quot;diskio&amp;quot; SELECT non_negative_derivative(mean(writes),1s) as &amp;quot;write&amp;quot; FROM &amp;quot;diskio&amp;quot; throughput: SELECT non_negative_derivative(mean(read_bytes),1s) as &amp;quot;read&amp;quot; FROM &amp;quot;diskio&amp;quot; SELECT non_negative_derivative(mean(write_bytes),1s) as &amp;quot;write&amp;quot; FROM &amp;quot;diskio&amp;quot; Utilization: SELECT non_negative_derivative(last(&amp;quot;io_time&amp;quot;),1ms) FROM &amp;quot;diskio&amp;quot; WHERE &amp;quot;name&amp;quot; =~ /^(v|s|)d(a|b|c|d)$/ GROUP BY &amp;quot;host&amp;quot;,&amp;quot;name&amp;quot;,time(_interval) Queue length: SELECT non_negative_derivative(last(&amp;quot;weighted_io_time&amp;quot;,1ms)) FROM &amp;quot;diskio&amp;quot; WHERE &amp;quot;name&amp;quot; =~ /^(v|s|)d(a|b|c|d)$/ GROUP BY &amp;quot;host&amp;quot;,&amp;quot;name&amp;quot;,time(_interval)</description>
    </item>
    
    <item>
      <title>AlertManager</title>
      <link>http://canuxcheng.com/post/metrics_alertmanager/</link>
      <pubDate>Thu, 18 Jan 2018 19:23:25 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/metrics_alertmanager/</guid>
      <description>alert-manager 在Prometheus中支持基于PromQL创建告警规则, prometheus通过push触发alertmanager. https://github.com/prometheus/alertmanager</description>
    </item>
    
    <item>
      <title>Exporter</title>
      <link>http://canuxcheng.com/post/metrics_exporter/</link>
      <pubDate>Thu, 18 Jan 2018 19:23:25 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/metrics_exporter/</guid>
      <description>exporter 广义上讲所有可以向Prometheus提供监控样本数据的程序都可以被称为一个Exporter。而Exporter的一个实例称为target</description>
    </item>
    
    <item>
      <title>Influxdb</title>
      <link>http://canuxcheng.com/post/metrics_influxdb/</link>
      <pubDate>Thu, 18 Jan 2018 19:23:25 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/metrics_influxdb/</guid>
      <description>Influxdb https://github.com/influxdata/influxdb Scalable datastore for metrics, events, and real-time analytics. 支持从opentsdb, graphite, collectd等获取数据 默认数据库_internal 用于存储内部运行数据 安装配置参考官方文档</description>
    </item>
    
    <item>
      <title>Kapacitor</title>
      <link>http://canuxcheng.com/post/metrics_kapacitor/</link>
      <pubDate>Thu, 18 Jan 2018 19:23:25 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/metrics_kapacitor/</guid>
      <description>Kapacitor https://github.com/influxdata/Kapacitor Open source framework for processing, monitoring, and alerting on time series data 可以通过chrongraf创建tickscript/task, 然后通过api/cli导入到kapacitor. 配</description>
    </item>
    
    <item>
      <title>Prometheus</title>
      <link>http://canuxcheng.com/post/metrics_prometheus/</link>
      <pubDate>Thu, 18 Jan 2018 19:23:25 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/metrics_prometheus/</guid>
      <description>Prometheus Prometheus Server是Prometheus组件中的核心部分，负责实现对监控数据的获取，存储以及查询 swarm部署: https://github.com/vegasbrianc/prometheus k8s部署: https://github.com/coreos/kube-prometheus https://github.com/coreos/prometheus-operator https://github.com/helm/charts/tree/master/stable/prometheus-operator 高可用: https://github.com/thanos-io/thanos</description>
    </item>
    
    <item>
      <title>Telegraf</title>
      <link>http://canuxcheng.com/post/metrics_telegraf/</link>
      <pubDate>Thu, 18 Jan 2018 19:23:25 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/metrics_telegraf/</guid>
      <description>Telegraf https://github.com/influxdata/telegraf The plugin-driven server agent for collecting &amp;amp; reporting metrics. Configuartion agent configuration: interval 所有inputs的默认运行间隔 round_interval collection_jitter precision ns/us/ms/s flush_interval flush_jitter input configuration: interval name_override # 默认measurements是插件名,修改默认measur</description>
    </item>
    
    <item>
      <title>Grafana</title>
      <link>http://canuxcheng.com/post/metrics_grafana/</link>
      <pubDate>Thu, 12 Jan 2017 21:05:48 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/metrics_grafana/</guid>
      <description>Grafana The tool for beautiful monitoring and metric analytics &amp;amp; dashboards for Graphite, InfluxDB &amp;amp; Prometheus &amp;amp; More. https://github.com/grafana/grafana 支持多种data source: graphite/influxdb/opentsdb/premetheus/elasticsearch/mysql/postgresql 安装配置参考官方文档 grafana配置文件是grafana.ini. HTTP API port = 3000 dashboard create/update</description>
    </item>
    
    <item>
      <title>Metrics</title>
      <link>http://canuxcheng.com/post/metrics/</link>
      <pubDate>Wed, 08 Jun 2016 09:46:47 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/metrics/</guid>
      <description>Monitoring Tranditional monitoring is for Datacenter, like nagios, zabbix. Modern monitoring is for Cloud and Container. Modern monitoring based on metrics, logs and tracing. TICK stack influxdb: tsdb. kapacitor: alerting. chronograf: GUI. telegraf(agent): metrics collector. Prometheus Graphing 最流行的监控绘图软件是grafana, 支持influxdb,ela</description>
    </item>
    
    <item>
      <title>Monitoring</title>
      <link>http://canuxcheng.com/post/monitoring/</link>
      <pubDate>Wed, 08 Jun 2016 09:46:47 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/monitoring/</guid>
      <description>Monitoring Tranditional monitoring is for Datacenter, like nagios, zabbix. Modern monitoring is for Cloud and Container. Modern monitoring based on metrics, logs and tracing. 现代的监控系统在DevOps的基础上，除了传统的metrics和logging的采集，还需要</description>
    </item>
    
    <item>
      <title>Tivoli</title>
      <link>http://canuxcheng.com/post/metrics_tivoli/</link>
      <pubDate>Wed, 20 Apr 2016 13:57:31 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/metrics_tivoli/</guid>
      <description>ITM ITM: IBM Tivoli Monitoring 是IBM的Cloud &amp;amp; Smart Infrastructure监控解决方案。 Architecture Overview: ITM主要由管理组件和可选组件组成。 Tivoli Management Services: TEMS TEPS TEP client Historical data collection(warehouse agent) warehouse</description>
    </item>
    
    <item>
      <title>Monitoring</title>
      <link>http://canuxcheng.com/post/win_monitoring/</link>
      <pubDate>Sun, 03 Apr 2016 14:15:40 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/win_monitoring/</guid>
      <description>windows的services和process services是windows的服务，有Name(Display Name)，Service</description>
    </item>
    
    <item>
      <title>Monitoring</title>
      <link>http://canuxcheng.com/post/linux_monitoring/</link>
      <pubDate>Thu, 31 Mar 2016 21:48:59 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/linux_monitoring/</guid>
      <description>inode </description>
    </item>
    
    <item>
      <title>Nagios</title>
      <link>http://canuxcheng.com/post/metrics_nagios/</link>
      <pubDate>Fri, 25 Mar 2016 11:15:48 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/metrics_nagios/</guid>
      <description>Nagios Nagios is the industry standard in IT infrastructure monitoring Nagios offers complete monitoring and alerting for servers, switches, applications, and services. Nagios官方宣称nagios是IT基础监控的工业标准。 Nagios提供对服务器，交换机，应用</description>
    </item>
    
    <item>
      <title>Zabbix</title>
      <link>http://canuxcheng.com/post/metrics_zabbix/</link>
      <pubDate>Fri, 25 Mar 2016 11:15:48 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/metrics_zabbix/</guid>
      <description>Zabbix </description>
    </item>
    
    <item>
      <title>Monitoring</title>
      <link>http://canuxcheng.com/post/network_monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/network_monitoring/</guid>
      <description>Monitoring network usage:
bytes_sent(out) bytes_recv(in)  packets:
packets_sent(out) packets_recv(in)  error_in/out:
SELECT non_negative_derivative(mean(&amp;quot;err_in&amp;quot;), 1s) AS &amp;quot;recv&amp;quot;, non_negative_derivative(mean(&amp;quot;err_out&amp;quot;), 1s) AS &amp;quot;send&amp;quot; FROM &amp;quot;net&amp;quot; WHERE &amp;quot;interface&amp;quot; =~ /^(vlan|eth|ens|bond).*/ AND $timeFilter GROUP BY time($__interval), &amp;quot;host&amp;quot;, &amp;quot;interface&amp;quot; fill(none)  drop_in/out:
SELECT non_negative_derivative(mean(&amp;quot;drop_in&amp;quot;), 1s) AS &amp;quot;recv&amp;quot;, non_negative_derivative(mean(&amp;quot;drop_out&amp;quot;), 1s) AS &amp;quot;send&amp;quot; FROM &amp;quot;net&amp;quot; WHERE &amp;quot;interface&amp;quot; =~ /^(vlan|eth|ens|bond).*/ AND $timeFilter GROUP BY time($__interval), &amp;quot;host&amp;quot;, &amp;quot;interface&amp;quot; fill(none)  </description>
    </item>
    
  </channel>
</rss>